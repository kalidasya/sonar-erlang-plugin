<?xml version="1.0" encoding="UTF-8"?>
<!-- Copied from dialyzer.erl -->
<rules>
   <rule>
      <key>R001</key>
      <name><![CDATA[mcCabe]]></name>
      <configKey>mcCabe</configKey>
      <description>
      <![CDATA[McCabe cyclomatic complexity metric. Available for modules and functions. 
      We define it based on the control flow graph of the functions with the number of 
      different execution paths of a function, namely the number of different outputs of 
      the function. ]]>
      </description>
      <param key="maximum" type="i" defaultValue="10">
         <description><![CDATA[The maximum cyclomatic complexity threshold. Default is 10.]]></description>
      </param>
   </rule>
   <rule>
      <key>R002</key>
      <name><![CDATA[max_depth_of_calling]]></name>
      <configKey>max_depth_of_calling</configKey>
      <description>
      <![CDATA[<p>The domain of the query is a module or a function. The length of function call-chains, namely the chain with the maximum depth. The depth of calling in the following example is 3.</p>
      <pre>
...
f([A|B], Acc) ->
	Acc0 = exec(A, Acc),
	f(B, Acc0);
 f([], Acc0)->
	Acc0.

exec(A, Acc)->
	io:format("~w",[A]),
	A + Acc.
...
      </pre>
      ]]>
      </description>
      <param key="maximum" type="i" defaultValue="10">
         <description><![CDATA[The maximum max_depth_of_calling threshold. Default is 10.]]></description>
      </param>
   </rule>
</rules>
