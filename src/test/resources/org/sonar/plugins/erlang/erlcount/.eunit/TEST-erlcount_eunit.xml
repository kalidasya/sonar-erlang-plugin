<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="7" failures="1" errors="0" skipped="0" time="0.067" name="module 'erlcount_eunit'">
  <testcase time="0.046" name="erlcount_eunit:find_erl_test_/0_20">
    <failure type="assertEqual_failed">
::{assertEqual_failed,[{module,erlcount_eunit},
                     {line,21},
                     {expression,"lists : sort ( build_list ( erlcount_lib : find_erl ( ? TESTDIR ) ) )"},
                     {expected,["Usage: find [-H] [-L] [-P] [-Olevel] [-D help|tree|search|stat|rates|opt|exec] [path...] [expression]",
                                "find: paths must precede expression: erlcount_counter.erl"]},
                     {value,["../.eunit/erlcount.erl",
                             "../.eunit/erlcount_counter.erl",
                             "../.eunit/erlcount_dispatch.erl",
                             "../.eunit/erlcount_eunit.erl",
                             "../.eunit/erlcount_lib.erl",
                             "../.eunit/erlcount_sup.erl",
                             "../src/erlcount.erl",
                             "../src/erlcount_counter.erl",
                             "../src/erlcount_dispatch.erl",
                             "../src/erlcount_lib.erl",
                             "../src/erlcount_sup.erl",
                             "../test/erlcount_eunit.erl"]}]}
    </failure>
    <system-out>
    </system-out>
  </testcase>
  <testcase time="0.000" name="erlcount_eunit:regex_count_test_/0_30"/>
  <testcase time="0.000" name="erlcount_eunit:regex_count_test_/0_31"/>
  <testcase time="0.000" name="erlcount_eunit:regex_count_test_/0_32"/>
  <testcase time="0.000" name="erlcount_eunit:regex_count_test_/0_33"/>
  <testcase time="0.000" name="erlcount_eunit:regex_count_test_/0_34"/>
  <testcase time="0.000" name="erlcount_eunit:regex_count_test_/0_35"/>
</testsuite>
